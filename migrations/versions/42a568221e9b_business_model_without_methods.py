"""business model without methods

Revision ID: 42a568221e9b
Revises: 989054fbd98a
Create Date: 2020-07-14 00:10:39.220495

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '42a568221e9b'
down_revision = '989054fbd98a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('direction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('point_of_departure', sa.String(), nullable=True),
    sa.Column('point_of_destination', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manufacturer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phase_of_flight',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('id_manufacturer', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_manufacturer'], ['manufacturer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('board',
    sa.Column('registration_number', sa.String(), nullable=False),
    sa.Column('id_model', sa.Integer(), nullable=True),
    sa.Column('year_of_manufacture', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_model'], ['model.id'], ),
    sa.PrimaryKeyConstraint('registration_number')
    )
    op.create_table('flight',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_board', sa.Integer(), nullable=True),
    sa.Column('id_direction', sa.Integer(), nullable=True),
    sa.Column('time_begin', sa.Time(), nullable=True),
    sa.Column('date_begin', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['id_board'], ['board.registration_number'], ),
    sa.ForeignKeyConstraint(['id_direction'], ['direction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subsystem',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('id_board', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_board'], ['board.registration_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('duration_of_phase',
    sa.Column('id_flight', sa.Integer(), nullable=True),
    sa.Column('id_phase', sa.Integer(), nullable=True),
    sa.Column('start_phase', sa.Time(), nullable=True),
    sa.Column('end_phase', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['id_flight'], ['flight.id'], ),
    sa.ForeignKeyConstraint(['id_phase'], ['phase_of_flight.id'], )
    )
    op.create_table('parameter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('id_system', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_system'], ['subsystem.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parameter_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_parameter', sa.Integer(), nullable=True),
    sa.Column('time', sa.Time(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('id_flight', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_flight'], ['flight.id'], ),
    sa.ForeignKeyConstraint(['id_parameter'], ['parameter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parameter_value')
    op.drop_table('parameter')
    op.drop_table('duration_of_phase')
    op.drop_table('subsystem')
    op.drop_table('flight')
    op.drop_table('board')
    op.drop_table('model')
    op.drop_table('phase_of_flight')
    op.drop_table('manufacturer')
    op.drop_table('direction')
    # ### end Alembic commands ###
